{"version":3,"sources":["logo.svg","actions/app.js","actions/doctor.js","api/OpenData.js","components/Header.js","components/TableDoctor.js","containers/TableDoctorContainer.js","components/FilterForm.js","components/ColumnsChips.js","pages/OpenData.js","components/PackageList.js","pages/Package.js","actions/package.js","components/DetailViewer.js","pages/DoctorDetail.js","App.js","serviceWorker.js","reducers/doctor.js","reducers/app.js","reducers/package.js","reducers/index.js","api/pOdata.js","index.js"],"names":["module","exports","changeToolbarTitle","title","type","payload","setToolbarButtons","buttons","fetchPaginate","page","dispatch","getState","selectedPack","packages","doctors","rowsPerPage","startsWith","filterField","path","$top","$skip","$orderby","params","$format","axios","get","getDoctors","then","data","fetchPaginateSuccess","catch","error","messagge","message","console","response","log","value","processError","severity","setRequestFilter","d","results","totalRows","parseInt","__count","useStyles","makeStyles","theme","flexGrow","connect","app","titleBar","buttonsBar","onButtonClick","buttonId","classes","AppBar","position","Toolbar","Typography","variant","className","map","btn","Button","key","id","onClick","color","table","minWidth","TableDoctor","columns","rows","onChangePage","orderDirection","onSortDoctors","orderBy","onRowSelected","length","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","column","TableCell","align","replace","TableSortLabel","direction","TableBody","row","internalId","selected","hover","TableFooter","TablePagination","rowsPerPageOptions","count","event","activeDoctorFields","sortType","sortField","sortDoctors","push","root","margin","spacing","width","FilterForm","itemFields","searchField","searchString","onFormChanges","selectItems","field","label","useState","setField","str","setStr","onChange","noValidate","autoComplete","Grid","container","justify","alignItems","TextField","name","select","target","SelectProps","native","option","display","justifyContent","flexWrap","padding","chip","activeColumns","totalColumns","doctorFields","activateColumn","addActiveField","deactivateColumn","removeActiveField","isActiveColumn","find","item","Chip","size","avatar","Avatar","handleChipClick","OpenData","props","setToolbar","state","filterForm","this","onCloseDialog","onSubmitFilter","changedEvent","setState","bodyView","view","TableDoctorContainer","lat","lng","Map","center","zoom","TileLayer","attribution","url","Marker","Popup","Dialog","open","isDialogOpen","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","changeForm","DialogActions","submitForm","Component","card","maxWidth","PackageList","onSelectPack","xs","Card","CardActionArea","CardContent","gutterBottom","CardActions","Package","href","pack","selectPackage","DetailViewer","itemKeys","Object","keys","filter","DoctorDetail","doctor","selectedDoctor","App","appBody","exact","isAppLoading","CircularProgress","Snackbar","snackBar","isOpen","autoHideDuration","onHideSnackbar","Boolean","window","location","hostname","match","initialState","action","slice","sort","a","b","sortAsc","sortDesc","createRootReducer","history","combineReducers","router","connectRouter","codiciServizi","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createHashHistory","store","createStore","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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BACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBClHIC,GAAmBlB,OAAOmB,sCAAwCC,IAElEP,GAAUQ,cACVC,GAAQC,YACZX,GAAkBC,IAClBK,GAAiBM,YAAgBC,YAAiBZ,IAAUa,OAG9DJ,GAAM/O,SVrBG,CACLN,KAL0B,iBAM1BC,QUmByB+O,KAE7BU,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,IAAD,CAAiBT,QAASA,IACxB,kBAAC,GAAD,QAGJgB,SAASC,eAAe,SNkGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzO,MAAK,SAAA0O,GACjCA,EAAaC,kB","file":"static/js/main.487f79c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const CHANGE_VIEW = 'CHANGE_VIEW';\r\nexport const CHANGE_TOOLBAR_TITLE = 'CHANGE_TOOLBAR_TITLE';\r\nexport const OPEN_DIALOG = 'OPEN_DIALOG';\r\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\r\nexport const START_LOADER = 'START_LOADER';\r\nexport const STOP_LOADER = 'STOP_LOADER';\r\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\r\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\r\nexport const SET_TOOLBAR_BUTTONS = 'SET_TOOLBAR_BUTTONS';\r\nexport const RESET_TOOLBAR_BUTTONS = 'RESET_TOOLBAR_BUTTONS';\r\n\r\nexport const changeView = newView => {\r\n  return {\r\n    type: CHANGE_VIEW,\r\n    payload: newView\r\n  };\r\n};\r\n\r\nexport const changeToolbarTitle = title => {\r\n  return {\r\n    type: CHANGE_TOOLBAR_TITLE,\r\n    payload: title\r\n  };\r\n};\r\n\r\nexport const setToolbarButtons = buttons => {\r\n  return {\r\n    type: SET_TOOLBAR_BUTTONS,\r\n    payload: buttons\r\n  };\r\n};\r\n\r\nexport const resetToolbarButtons = () => {\r\n  return {\r\n    type: RESET_TOOLBAR_BUTTONS\r\n  };\r\n};\r\n\r\nexport const openDialog = () => {\r\n  return {\r\n    type: OPEN_DIALOG\r\n  };\r\n};\r\n\r\nexport const closeDialog = () => {\r\n  return {\r\n    type: CLOSE_DIALOG\r\n  };\r\n};\r\n\r\nexport const startLoader = () => {\r\n  return {\r\n    type: START_LOADER\r\n  };\r\n};\r\n\r\nexport const stopLoader = () => {\r\n  return {\r\n    type: STOP_LOADER\r\n  };\r\n};\r\n\r\nexport const showSnackbar = (severity, message) => {\r\n  return {\r\n    type: SHOW_SNACKBAR,\r\n    payload: { severity, message }\r\n  };\r\n};\r\n\r\nexport const hideSnackbar = () => {\r\n  return {\r\n    type: HIDE_SNACKBAR\r\n  };\r\n};\r\n","import { getDoctors, processError } from '../api/OpenData';\r\nimport { startLoader, stopLoader, showSnackbar } from '../actions/app';\r\n\r\nexport const SET_REQUEST_FILTER = 'SET_REQUEST_FILTER';\r\nexport const FETCH_PAGINATE_SUCCESS = 'FETCH_PAGINATE_SUCCESS';\r\nexport const FETCH_PAGINATE_ERROR = 'FETCH_PAGINATE_ERROR';\r\nexport const SORT_DOCTORS = 'SORT_DOCTORS';\r\nexport const FILTER_PAGINATE = 'FILTER_PAGINATE';\r\nexport const SELECT_DOCTOR = 'SELECT_DOCTOR';\r\nexport const SERVER_ERROR = 'SERVER_ERROR';\r\nexport const ACTIVATE_FIELD = 'ACTIVATE_FIELD';\r\nexport const DEACTIVATE_FIELD = 'DEACTIVATE_FIELD';\r\n\r\nexport const fetchPaginate = page => {\r\n  return (dispatch, getState) => {\r\n    dispatch(startLoader());\r\n    const {\r\n      packages: { selectedPack },\r\n      doctors: { rowsPerPage, startsWith, filterField }\r\n    } = getState();\r\n    return getDoctors(\r\n      selectedPack,\r\n      rowsPerPage,\r\n      rowsPerPage * page,\r\n      null,\r\n      startsWith,\r\n      filterField\r\n    )\r\n      .then(({ data }) => {\r\n        dispatch(stopLoader());\r\n        dispatch(fetchPaginateSuccess({ page, data }));\r\n      })\r\n      .catch(error => {\r\n        dispatch(stopLoader());\r\n        const messagge = processError(error);\r\n        dispatch(showSnackbar('error', messagge));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setRequestFilter = (startsWith, filterField) => {\r\n  return {\r\n    type: SET_REQUEST_FILTER,\r\n    payload: { startsWith, filterField }\r\n  };\r\n};\r\n\r\nexport const fetchPaginateSuccess = ({ page, data }) => {\r\n  return {\r\n    type: FETCH_PAGINATE_SUCCESS,\r\n    payload: {\r\n      doctors: data.d.results,\r\n      totalRows: parseInt(data.d.__count, 10), // count is a string in this API\r\n      page\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPaginateError = error => {\r\n  return {\r\n    type: FETCH_PAGINATE_ERROR,\r\n    payload: {\r\n      error\r\n    }\r\n  };\r\n};\r\n\r\nexport const sortDoctors = (sortType, sortField) => {\r\n  return {\r\n    type: SORT_DOCTORS,\r\n    payload: { sortType, sortField }\r\n  };\r\n};\r\n\r\nexport const selectDoctor = doctor => {\r\n  return {\r\n    type: SELECT_DOCTOR,\r\n    payload: doctor\r\n  };\r\n};\r\n\r\nexport const addActiveField = field => {\r\n  return {\r\n    type: ACTIVATE_FIELD,\r\n    payload: field\r\n  };\r\n};\r\n\r\nexport const removeActiveField = field => {\r\n  return {\r\n    type: DEACTIVATE_FIELD,\r\n    payload: field\r\n  };\r\n};\r\n","import axios from 'axios';\r\n\r\nconst ENDPONT_ODATA_PIEMONTE = 'https://api.smartdatanet.it';\r\nconst ENDPONT_OPEN_DATA_PIEMONTE = 'http://www.dati.piemonte.it';\r\n\r\nexport const getDoctors = (\r\n  path,\r\n  $top = 0,\r\n  $skip = 10,\r\n  $orderby = 'Data_inizio_attivita', // property asc/desc\r\n  startsWith,\r\n  filterField\r\n) => {\r\n  const params = {\r\n    $top,\r\n    $skip,\r\n    $orderby,\r\n    $format: 'json'\r\n  };\r\n  if (startsWith && filterField) {\r\n    params['$filter'] = `startswith(${filterField},'${startsWith}')`;\r\n  }\r\n  return axios.get(`/api/${path}/DataEntities/`, { params });\r\n};\r\n\r\nexport const processError = error => {\r\n  let message = 'Generic Error! Try again.';\r\n  console.error(error);\r\n  if (error.response) {\r\n    console.log('SERVER_RESPONSE', error.response);\r\n    try {\r\n      const { data } = error.response;\r\n      message = data.error.message.value;\r\n    } catch {\r\n      message = 'Generic Error! Try again.';\r\n    }\r\n  }\r\n  return message;\r\n};\r\n\r\nexport const getPackageIds = () => {\r\n  return axios.get('/rpapisrv/api/rest/package');\r\n};\r\n\r\nexport const getPackageById = id => {\r\n  return axios.get('/rpapisrv/api/rest/package/' + id);\r\n};\r\n\r\nexport const getPackages = ids => {\r\n  const requests = ids.map(id => getPackageById(id));\r\n  return axios.all(requests);\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nimport { openDialog } from '../actions/app';\r\nimport { fetchPaginate, setRequestFilter } from '../actions/doctor';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    flexGrow: 2\r\n  }\r\n}));\r\n\r\nconst Header = ({ titleBar, buttons, onButtonClick }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar>\r\n        <Typography variant='h6' className={classes.title}>\r\n          {titleBar}\r\n        </Typography>\r\n        {buttons.map(btn => (\r\n          <Button\r\n            key={btn.id}\r\n            onClick={() => onButtonClick(btn.id)}\r\n            color='secondary'\r\n          >\r\n            {btn.title}\r\n          </Button>\r\n        ))}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  titleBar: PropTypes.string.isRequired,\r\n  buttons: PropTypes.array.isRequired,\r\n  onButtonClick: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ app }) => {\r\n  return {\r\n    titleBar: app.titleBar,\r\n    buttons: app.buttonsBar\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onButtonClick: buttonId => {\r\n      switch (buttonId) {\r\n        case 'SEARCH':\r\n          dispatch(openDialog());\r\n          break;\r\n        case 'LIST':\r\n          dispatch(setRequestFilter('', ''));\r\n          dispatch(fetchPaginate(0));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TableFooter,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n});\r\n\r\nconst TableDoctor = ({\r\n  columns,\r\n  rows,\r\n  rowsPerPage,\r\n  totalRows,\r\n  page,\r\n  onChangePage,\r\n  orderDirection,\r\n  orderBy,\r\n  onSortDoctors,\r\n  onRowSelected\r\n}) => {\r\n  const classes = useStyles();\r\n  if (!rows.length) {\r\n    return <h3>No data to display</h3>;\r\n  }\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell align='right' key={column}>\r\n                {column.replace(/_/g, ' ')}\r\n                <TableSortLabel\r\n                  onClick={() =>\r\n                    onSortDoctors(\r\n                      orderDirection === 'asc' ? 'desc' : 'asc',\r\n                      column\r\n                    )\r\n                  }\r\n                  direction={orderDirection === 'asc' ? 'desc' : 'asc'}\r\n                ></TableSortLabel>\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow\r\n              key={row.internalId}\r\n              selected={true}\r\n              hover={true}\r\n              onClick={() => onRowSelected(row)}\r\n            >\r\n              {columns.map(column => (\r\n                <TableCell key={column} align='right'>\r\n                  {row[column]}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[rowsPerPage]}\r\n              count={totalRows}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={(event, page) => onChangePage(page)}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nTableDoctor.propTypes = {\r\n  colums: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  totalRows: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  onRowSelected: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  orderDirection: PropTypes.string.isRequired\r\n};\r\n\r\nexport default TableDoctor;\r\n","import { connect } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\nimport { fetchPaginate, sortDoctors, selectDoctor } from '../actions/doctor';\r\nimport TableDoctor from '../components/TableDoctor';\r\nimport { resetToolbarButtons } from '../actions/app';\r\n\r\nconst mapStateToProps = ({ doctors }) => {\r\n  return {\r\n    columns: doctors.activeDoctorFields,\r\n    rows: doctors.doctors,\r\n    totalRows: doctors.totalRows,\r\n    rowsPerPage: doctors.rowsPerPage,\r\n    page: doctors.page,\r\n    orderBy: doctors.orderBy,\r\n    orderDirection: doctors.orderDirection\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChangePage: page => {\r\n      dispatch(fetchPaginate(page));\r\n    },\r\n    onSortDoctors: (sortType, sortField) => {\r\n      dispatch(sortDoctors(sortType, sortField));\r\n    },\r\n    onRowSelected: row => {\r\n      dispatch(selectDoctor(row));\r\n      dispatch(resetToolbarButtons());\r\n      dispatch(push('/doctor'));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableDoctor);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: 200\r\n    }\r\n  }\r\n}));\r\n\r\nconst FilterForm = ({\r\n  itemFields,\r\n  searchField,\r\n  searchString,\r\n  onFormChanges\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const selectItems = itemFields.map(field => ({\r\n    label: field.replace(/_/g, ' '),\r\n    value: field\r\n  }));\r\n\r\n  const [field, setField] = useState(searchField);\r\n  const [str, setStr] = useState(searchString);\r\n\r\n  return (\r\n    <form\r\n      className={classes.root}\r\n      onChange={event => onFormChanges(event)}\r\n      noValidate\r\n      autoComplete='off'\r\n    >\r\n      <Grid container direction='row' justify='center' alignItems='center'>\r\n        <TextField\r\n          id='searchField'\r\n          name='searchField'\r\n          select\r\n          label='Campo'\r\n          variant='filled'\r\n          value={field}\r\n          onChange={event => setField(event.target.value)}\r\n          SelectProps={{\r\n            native: true\r\n          }}\r\n        >\r\n          {selectItems.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          id='searchString'\r\n          name='searchString'\r\n          label='Valore'\r\n          variant='filled'\r\n          value={str}\r\n          onChange={event => setStr(event.target.value)}\r\n        />\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilterForm.propTypes = {\r\n  itemFields: PropTypes.array.isRequired,\r\n  searchField: PropTypes.string.isRequired,\r\n  searchString: PropTypes.string.isRequired,\r\n  onFormChanges: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FilterForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Chip, Avatar } from '@material-ui/core';\r\n\r\nimport { addActiveField, removeActiveField } from '../actions/doctor';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5)\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst ColumnsChips = ({\r\n  activeColumns,\r\n  totalColumns,\r\n  activateColumn,\r\n  deactivateColumn\r\n}) => {\r\n  const classes = useStyles();\r\n  const isActiveColumn = column => activeColumns.find(item => item === column);\r\n  const handleChipClick = column => {\r\n    if (isActiveColumn(column)) {\r\n      deactivateColumn(column);\r\n    } else {\r\n      activateColumn(column);\r\n    }\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      {totalColumns.map(column => (\r\n        <Chip\r\n          key={column}\r\n          className={classes.chip}\r\n          size='small'\r\n          color={isActiveColumn(column) ? 'primary' : 'default'}\r\n          avatar={<Avatar>C</Avatar>}\r\n          label={column.replace(/_/g, ' ')}\r\n          onClick={() => handleChipClick(column)}\r\n        />\r\n      ))}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nColumnsChips.propTypes = {\r\n  activeColumns: PropTypes.array.isRequired,\r\n  totalColumns: PropTypes.array.isRequired,\r\n  activateColumn: PropTypes.func.isRequired,\r\n  deactivateColumn: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ doctors }) => {\r\n  return {\r\n    activeColumns: doctors.activeDoctorFields,\r\n    totalColumns: doctors.doctorFields\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    activateColumn: field => {\r\n      dispatch(addActiveField(field));\r\n    },\r\n    deactivateColumn: field => {\r\n      dispatch(removeActiveField(field));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnsChips);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContentText,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  changeToolbarTitle,\r\n  closeDialog,\r\n  setToolbarButtons\r\n} from '../actions/app';\r\nimport { fetchPaginate, setRequestFilter } from '../actions/doctor';\r\n\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\n\r\nimport TableDoctorContainer from '../containers/TableDoctorContainer';\r\nimport FilterForm from '../components/FilterForm';\r\nimport ColumnsChips from '../components/ColumnsChips';\r\n\r\nclass OpenData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const toolbarButtons = [\r\n      { id: 'SEARCH', title: 'Cerca' },\r\n      { id: 'LIST', title: 'Lista' }\r\n    ];\r\n    this.props.setToolbar(props.title, toolbarButtons);\r\n\r\n    this.state = {\r\n      filterForm: {\r\n        searchString: props.startsWith,\r\n        searchField: props.filterField\r\n      }\r\n    };\r\n  }\r\n\r\n  submitForm() {\r\n    this.props.onCloseDialog();\r\n    this.props.onSubmitFilter(this.state.filterForm);\r\n  }\r\n\r\n  changeForm(changedEvent) {\r\n    const { name, value } = changedEvent.target;\r\n    const { filterForm } = this.state;\r\n    filterForm[name] = value;\r\n    this.setState({ filterForm });\r\n  }\r\n\r\n  render() {\r\n    // SETUP THE BODY VIEW\r\n    let bodyView = '';\r\n    if (this.props.view === 'LIST') {\r\n      bodyView = <TableDoctorContainer />;\r\n    } else if (this.props.view === 'MAP') {\r\n      const position = [this.props.map.lat, this.props.map.lng];\r\n      bodyView = (\r\n        <Map center={position} zoom={this.props.map.zoom}>\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n            url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n          />\r\n          <Marker position={position}>\r\n            <Popup>\r\n              A pretty CSS3 popup. <br /> Easily customizable.\r\n            </Popup>\r\n          </Marker>\r\n        </Map>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.isDialogOpen}\r\n          onClose={() => this.props.onCloseDialog()}\r\n          aria-labelledby='form-dialog-title'\r\n        >\r\n          <DialogTitle id='form-dialog-title'>Filtri di ricerca</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Filtra i dottori per i seguenti campi\r\n            </DialogContentText>\r\n            <FilterForm\r\n              itemFields={this.props.doctorFields}\r\n              searchString={this.state.filterForm.searchString}\r\n              searchField={this.state.filterForm.searchField}\r\n              onFormChanges={filterForm => this.changeForm(filterForm)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => this.props.onCloseDialog()} color='primary'>\r\n              Chiudi\r\n            </Button>\r\n            <Button onClick={() => this.submitForm()} color='primary'>\r\n              Cerca\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <ColumnsChips />\r\n        {bodyView}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nOpenData.propTypes = {\r\n  view: PropTypes.string.isRequired,\r\n  map: PropTypes.object.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  doctorFields: PropTypes.array.isRequired,\r\n  onSubmitFilter: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ app, doctors, packages }) => {\r\n  return {\r\n    view: app.view,\r\n    map: app.map,\r\n    title: packages.selectedPack,\r\n    doctorFields: doctors.doctorFields,\r\n    isDialogOpen: app.isDialogOpen,\r\n    startsWith: doctors.startsWith,\r\n    filterField: doctors.filterField\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setToolbar: (title, buttons) => {\r\n      dispatch(changeToolbarTitle(title));\r\n      dispatch(setToolbarButtons(buttons));\r\n    },\r\n    onSubmitFilter: ({ searchString, searchField }) => {\r\n      dispatch(setRequestFilter(searchString, searchField));\r\n      dispatch(fetchPaginate(0));\r\n    },\r\n    onCloseDialog: () => {\r\n      dispatch(closeDialog());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenData);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  Grid,\r\n  makeStyles,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Button\r\n} from '@material-ui/core';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  card: {\r\n    maxWidth: 260\r\n  }\r\n}));\r\n\r\nconst PackageList = ({ packages, selectedPack, onSelectPack }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={2} className={classes.root}>\r\n      {packages.map(item => (\r\n        <Grid item xs={3} key={item}>\r\n          <Card onClick={() => onSelectPack(item)} className={classes.card}>\r\n            <CardActionArea>\r\n              <CardContent>\r\n                <Typography gutterBottom variant='h5' component='h2'>\r\n                  {item}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size='small' color='primary'>\r\n                Lista dati\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nPackageList.propTypes = {\r\n  packages: PropTypes.array.isRequired,\r\n  selectedPack: PropTypes.string.isRequired,\r\n  onSelectPack: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PackageList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport { selectPackage } from '../actions/package';\r\nimport { fetchPaginate } from '../actions/doctor';\r\nimport { changeToolbarTitle, setToolbarButtons } from '../actions/app';\r\nimport PackageList from '../components/PackageList';\r\n\r\nclass Package extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.setToolbar('Open Data Piemonte', []);\r\n  }\r\n  render() {\r\n    const { packages, selectedPack, onSelectPack } = this.props;\r\n    return (\r\n      <div className='package-container'>\r\n        <Typography variant='subtitle1'>\r\n          Elenco di alcuni data set accessibili tramite API del portale:\r\n          <a target='_blank' href='http://www.dati.piemonte.it/'>\r\n            www.dati.piemonte.it\r\n          </a>\r\n        </Typography>\r\n\r\n        <PackageList\r\n          packages={packages}\r\n          selectedPack={selectedPack}\r\n          onSelectPack={pack => onSelectPack(pack)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPackage.propTypes = {\r\n  packages: PropTypes.array.isRequired,\r\n  selectedPack: PropTypes.string.isRequired,\r\n  onSelectPack: PropTypes.func.isRequired,\r\n  setToolbar: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ packages }) => {\r\n  return {\r\n    packages: packages.packages,\r\n    selectedPack: packages.selectedPack\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setToolbar: (title, buttons) => {\r\n      dispatch(changeToolbarTitle(title));\r\n      dispatch(setToolbarButtons(buttons));\r\n    },\r\n    onSelectPack: pack => {\r\n      dispatch(selectPackage(pack));\r\n      dispatch(fetchPaginate(0));\r\n      dispatch(push('/openData'));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Package);\r\n","export const FETCH_PACKAGES = 'FETCH_PACKAGES';\r\nexport const SELECT_PACKAGE = 'FETCH_PACKAGES_SUCCESS';\r\n\r\nexport const fetchPackages = packages => {\r\n  return {\r\n    type: FETCH_PACKAGES,\r\n    payload: packages\r\n  };\r\n};\r\n\r\nexport const selectPackage = pack => {\r\n  return {\r\n    type: SELECT_PACKAGE,\r\n    payload: pack\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: 200\r\n    }\r\n  }\r\n}));\r\n\r\nconst DetailViewer = ({ item }) => {\r\n  const classes = useStyles();\r\n  const itemKeys = Object.keys(item).filter(\r\n    key => typeof item[key] !== 'object'\r\n  );\r\n  return (\r\n    <div className='detail-viewer'>\r\n      {itemKeys.map(key => (\r\n        <div key={key} className='detail-viewer-item'>\r\n          <label>{key.replace(/_/g, ' ')}</label>\r\n          <p>{item[key]}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nDetailViewer.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DetailViewer;\r\n\r\n{\r\n  /* \r\n        \r\n             <TextField\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          id={key}\r\n          label={key.replace(/_/g, ' ')}\r\n          variant='filled'\r\n          defaultValue={item[key]}\r\n        />\r\n        */\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DetailViewer from '../components/DetailViewer';\r\n\r\nclass DoctorDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const doctor = this.props.selectedDoctor;\r\n    return (\r\n      <div>\r\n        <DetailViewer item={doctor} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDoctorDetail.propTypes = {\r\n  selectedDoctor: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ doctors }) => {\r\n  return {\r\n    selectedDoctor: doctors.selectedDoctor\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DoctorDetail);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { CircularProgress, Snackbar } from '@material-ui/core';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { hideSnackbar } from './actions/app';\n\nimport Header from './components/Header';\nimport OpenData from './pages/OpenData';\nimport Package from './pages/Package';\nimport DoctorDetail from './pages/DoctorDetail';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let appBody = (\n      <Switch>\n        <Route component={Package} exact path='/' />\n        <Route component={OpenData} exact path='/openData' />\n        <Route component={DoctorDetail} path='/doctor' />\n      </Switch>\n    );\n    if (this.props.isAppLoading) {\n      appBody = (\n        <div className='center-progress'>\n          <CircularProgress />\n        </div>\n      );\n    }\n    return (\n      <div className='App'>\n        <Header />\n        {appBody}\n        <Snackbar\n          open={this.props.snackBar.isOpen}\n          autoHideDuration={6000}\n          message={this.props.snackBar.message}\n          onClose={() => this.props.onHideSnackbar()}\n        ></Snackbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ app }) => {\n  return {\n    view: app.view,\n    map: app.map,\n    isAppLoading: app.isAppLoading,\n    snackBar: app.snackBar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onHideSnackbar: () => {\n      dispatch(hideSnackbar());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  FETCH_PAGINATE_ERROR,\r\n  FETCH_PAGINATE_SUCCESS,\r\n  SET_REQUEST_FILTER,\r\n  SORT_DOCTORS,\r\n  SELECT_DOCTOR,\r\n  ACTIVATE_FIELD,\r\n  DEACTIVATE_FIELD\r\n} from '../actions/doctor';\r\nconst initialState = {\r\n  doctors: [],\r\n  doctorFields: [],\r\n  activeDoctorFields: [],\r\n  selectedDoctor: null,\r\n  totalRows: 0,\r\n  error: null,\r\n  rowsPerPage: 10,\r\n  page: 0,\r\n  startsWith: '',\r\n  filterField: '',\r\n  orderBy: '',\r\n  orderDirection: 'asc' // asc/desc\r\n};\r\n\r\nexport const doctors = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_REQUEST_FILTER:\r\n      const { startsWith, filterField } = action.payload;\r\n      return { ...state, startsWith, filterField };\r\n    case FETCH_PAGINATE_SUCCESS:\r\n      let doctorFields = state.doctorFields;\r\n      let activeDoctorFields = state.activeDoctorFields;\r\n      if (action.payload.doctors.length > 0) {\r\n        const doctor = action.payload.doctors[0];\r\n        doctorFields = Object.keys(doctor).filter(\r\n          key => typeof doctor[key] !== 'object' || doctor[key] === null\r\n        );\r\n        activeDoctorFields = doctorFields.slice(0, 5);\r\n      } else {\r\n        activeDoctorFields = [];\r\n      }\r\n      return {\r\n        ...state,\r\n        doctors: action.payload.doctors,\r\n        doctorFields,\r\n        activeDoctorFields,\r\n        totalRows: action.payload.totalRows,\r\n        page: action.payload.page\r\n      };\r\n    case FETCH_PAGINATE_ERROR:\r\n      return { ...state, error: action.payload.error };\r\n    case SORT_DOCTORS:\r\n      if (action.payload.sortType === 'asc') {\r\n        return {\r\n          ...state,\r\n          orderBy: action.payload.sortField,\r\n          orderDirection: 'asc',\r\n          doctors: state.doctors\r\n            .sort((a, b) => sortAsc(a, b, action.payload.sortField))\r\n            .slice()\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          orderBy: action.payload.sortField,\r\n          orderDirection: 'desc',\r\n          doctors: state.doctors\r\n            .sort((a, b) => sortDesc(a, b, action.payload.sortField))\r\n            .slice()\r\n        };\r\n      }\r\n    case SELECT_DOCTOR:\r\n      return { ...state, selectedDoctor: action.payload };\r\n    case ACTIVATE_FIELD:\r\n      return {\r\n        ...state,\r\n        activeDoctorFields: [...state.activeDoctorFields, action.payload]\r\n      };\r\n    case DEACTIVATE_FIELD:\r\n      return {\r\n        ...state,\r\n        activeDoctorFields: state.activeDoctorFields.filter(\r\n          field => field !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst sortAsc = (a, b, field) => {\r\n  //Sort string and numbers\r\n  if (a[field] > b[field]) {\r\n    return 1;\r\n  }\r\n  if (b[field] > a[field]) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst sortDesc = (a, b, field) => {\r\n  //Sort string and numbers\r\n  if (a[field] > b[field]) {\r\n    return -1;\r\n  }\r\n  if (b[field] > a[field]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n","import {\r\n  CHANGE_VIEW,\r\n  CHANGE_TOOLBAR_TITLE,\r\n  OPEN_DIALOG,\r\n  CLOSE_DIALOG,\r\n  START_LOADER,\r\n  STOP_LOADER,\r\n  SHOW_SNACKBAR,\r\n  HIDE_SNACKBAR,\r\n  SET_TOOLBAR_BUTTONS,\r\n  RESET_TOOLBAR_BUTTONS\r\n} from '../actions/app';\r\nconst initialState = {\r\n  view: 'LIST',\r\n  titleBar: 'Open Data Piemonte',\r\n  buttonsBar: [],\r\n  isDialogOpen: false,\r\n  isAppLoading: false,\r\n  snackBar: {\r\n    isOpen: false,\r\n    message: '',\r\n    severity: ''\r\n  },\r\n  map: {\r\n    lat: 45.07049,\r\n    lng: 7.68682,\r\n    zoom: 10\r\n  }\r\n};\r\n\r\nexport const app = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_SNACKBAR:\r\n      const { severity, message } = action.payload;\r\n      return { ...state, snackBar: { isOpen: true, severity, message } };\r\n    case HIDE_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        snackBar: { isOpen: false, severity: '', message: '' }\r\n      };\r\n    case START_LOADER:\r\n      return { ...state, isAppLoading: true };\r\n    case STOP_LOADER:\r\n      return { ...state, isAppLoading: false };\r\n    case OPEN_DIALOG:\r\n      return { ...state, isDialogOpen: true };\r\n    case CLOSE_DIALOG:\r\n      return { ...state, isDialogOpen: false };\r\n    case CHANGE_VIEW:\r\n      return { ...state, view: action.payload };\r\n    case CHANGE_TOOLBAR_TITLE:\r\n      return { ...state, titleBar: action.payload };\r\n    case SET_TOOLBAR_BUTTONS:\r\n      return { ...state, buttonsBar: action.payload };\r\n    case RESET_TOOLBAR_BUTTONS:\r\n      return { ...state, buttonsBar: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SELECT_PACKAGE, FETCH_PACKAGES } from '../actions/package';\r\nconst initialState = {\r\n  selectedPack: '',\r\n  packages: []\r\n};\r\n\r\nexport const packages = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SELECT_PACKAGE:\r\n      return { ...state, selectedPack: action.payload };\r\n    case FETCH_PACKAGES:\r\n      return { ...state, packages: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport { doctors } from '../reducers/doctor';\r\nimport { app } from '../reducers/app';\r\nimport { packages } from '../reducers/package';\r\n\r\nconst createRootReducer = history =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    app,\r\n    doctors,\r\n    packages\r\n  });\r\n\r\nexport default createRootReducer;\r\n","const codiciServizi = [\r\n  'PrestazioneA_1190',\r\n  'RicoveriOspe_1189',\r\n  'StruttureRic_1191',\r\n  'Scuole_data__1197',\r\n  'Scuole_costr_1198',\r\n  'CopieLibriBi_1063',\r\n  'Titolo_autor_1196',\r\n  'Soggetti_lib_1200',\r\n  'RiepilogoGen_1209',\r\n  'EserciziInCe_1210',\r\n  'EserciziPubb_1211',\r\n  'FormeSpecial_1212',\r\n  'Stabilimenti_1245',\r\n  'StruttureSan_1525',\r\n  'ScuolePiemon_1282',\r\n  'Polis_urp_sc_1183',\r\n  'ElencoMedciE_1078',\r\n  'FlussiTurist_1644',\r\n  'Stabilimenti_1340',\r\n  'PrezziCarbur_1348',\r\n  'ImpiantiCarb_1347',\r\n  'NumeroAttiDi_1584',\r\n  'StruttureRic_1661',\r\n  'AnagraficaAz_1660',\r\n  'AlberghiRtaO_1665',\r\n  'AlberghiRtaO_1662',\r\n  'OstelliOpenD_1673',\r\n  'AlloggiVacan_1671',\r\n  'BedBreakfast_1669',\r\n  'CampeggiEVil_1672',\r\n  'CampeggiEVil_1656',\r\n  'AgriturismiO_1663',\r\n  'Affittacamer_1664',\r\n  'CaseVacanzeO_1694',\r\n  'ScuolePiemon_1282',\r\n  'PrezziCarbur_1348',\r\n  'ElencoMedici_1524',\r\n  'ElencoDeiCon_1778',\r\n  'SistemaSport_1823',\r\n  'ImpreseIct_1820',\r\n  'DotazioniIct_1821',\r\n  'ContattiUrpR_1827',\r\n  'ContattiUrpR_1829',\r\n  'DwanauDwAnag_2010',\r\n  'DwumaDwUtent_2007',\r\n  'AtlterAtlant_2013',\r\n  'AziendeSanit_2115',\r\n  'StruttureSan_2142',\r\n  'Finanziament_2060',\r\n  'Dwpsr0713DwM_2012',\r\n  'EserciziInCe_1210',\r\n  'CapitoliDiSp_2072',\r\n  'FormeSpecial_1212',\r\n  'ElencoDelleL_2061',\r\n  'ElencoDelleL_2066',\r\n  'ParcoCircola_2047',\r\n  'ParcoCircola_2053',\r\n  'ParcoCircola_2055',\r\n  'PrestazioniS_2119',\r\n  'Polis_urp_sc_1183',\r\n  'StruttureRic_1191',\r\n  'StruttureTer_2128',\r\n  'RendicontoDe_2068',\r\n  'RendicontoDe_2067',\r\n  'PresenzaOnLi_2104',\r\n  'PresenzaOnli_2105',\r\n  'NumeroAziend_2043',\r\n  'Strumentazio_2146',\r\n  'UpStruttureC_2134',\r\n  'UpStruttureA_2135',\r\n  'PuntiDiEroga_2120',\r\n  'UofStrutture_2140',\r\n  'StruttureTer_2124',\r\n  'Nomenclatore_2117',\r\n  'ElencoDegliI_2029',\r\n  'RicettivitaT_2039',\r\n  'StudentiStra_2090',\r\n  'StudentiStra_2089',\r\n  'TrattiStrada_1796',\r\n  'DotazioneIct_1768',\r\n  'UtilizzoIctP_1775',\r\n  'SistemaSport_1824',\r\n  'RiepilogoGen_1822',\r\n  'RiepilogoGen_1819',\r\n  'ContattiUrpR_1831',\r\n  'AmemodModell_2014',\r\n  'UfficiPubbli_2033',\r\n  'ImpiantiTerm_2040',\r\n  'StruttureSan_2143',\r\n  'RiepilogoGen_2170',\r\n  'ImpiantiCarb_1347',\r\n  'Scuole_data__1197',\r\n  'DwcapuDwCens_2008',\r\n  'AziendeFuori_1609',\r\n  'AziendeInPie_1608',\r\n  'ParcoCircola_2049',\r\n  'ParcoCircola_2051',\r\n  'ParcoCircola_2056',\r\n  'ParcoCircola_2100',\r\n  'ParcoCircola_2052',\r\n  'ParcoCircola_2098',\r\n  'RetePolisPie_2019',\r\n  'RetePolisPie_2027',\r\n  'ElencoDeiGes_2063',\r\n  'AriannaLeggi_2009',\r\n  'ElencoDelleU_2017',\r\n  'FarmaciePubb_2028',\r\n  'PrestazioniS_2118',\r\n  'ElencoMedciE_1078',\r\n  'RicoveriOspe_1189',\r\n  'ResidenzeSan_2130',\r\n  'RetePolisPie_2026',\r\n  'Strumentazio_2147',\r\n  'UofSanitarie_2144',\r\n  'PresenzaOnLi_2077',\r\n  'CapitoliDiSp_2070',\r\n  'CapitoliDiSp_2069',\r\n  'StruttureAmb_2141',\r\n  'UnitaOrganiz_2123',\r\n  'ResidenzeSan_2131',\r\n  'StruttureTer_2125',\r\n  'StudentiPiem_2096',\r\n  'PosizioneGiu_2088',\r\n  'AgriturismiO_2288',\r\n  'RifugiOpenDa_2296',\r\n  'CampeggiEVil_2295',\r\n  'Soggetti_lib_1200',\r\n  'CopieLibriBi_1063',\r\n  'Titolo_autor_1196',\r\n  'RiepilogoGen_1209',\r\n  'UtilizzoIctP_1771'\r\n];\r\n\r\nexport default codiciServizi;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createHashHistory } from 'history';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ConnectedRouter, routerMiddleware } from 'connected-react-router';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport createRootReducer from './reducers';\nimport { fetchPackages } from './actions/package';\nimport codiciServizi from './api/pOdata';\n\n// Setup REDUX extension for monitor state\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst history = createHashHistory();\nconst store = createStore(\n  createRootReducer(history),\n  composeEnhancers(applyMiddleware(routerMiddleware(history), thunk))\n);\n\nstore.dispatch(fetchPackages(codiciServizi));\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}